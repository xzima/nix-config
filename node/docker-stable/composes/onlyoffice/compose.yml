# based on:
# https://github.com/stilicho2011/ubuntu_rep/blob/main/onlyoffice/docker-compose.yaml
# https://github.com/ONLYOFFICE/Docker-DocumentServer/blob/master/docker-compose.yml
services:
  onlyoffice-postgres:
    image: postgres:17.6-alpine3.22
    restart: unless-stopped
    healthcheck:
      test: [ "CMD", "pg_isready", "-q", "-d", "${POSTGRES_DB}", "-U", "${POSTGRES_USER}" ]
      start_period: 60s
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - ${STORAGE_PATH}/onlyoffice/db/postgres:/var/lib/postgresql/data

  onlyoffice-redis:
    image: redis:8.2.1-alpine3.22
    restart: unless-stopped
    command: [ "redis-server", "--requirepass", "${REDIS_PASSWORD}" ]
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      start_period: 60s
    volumes:
      - ${STORAGE_PATH}/onlyoffice/db/redis:/data

  onlyoffice-rabbitmq:
    image: rabbitmq:4.1.3-alpine
    restart: unless-stopped
    healthcheck:
      test: [ "CMD", "rabbitmq-diagnostics", "-q", "ping" ]
      start_period: 60s
    environment:
      RABBITMQ_DEFAULT_USER: ${RABBITMQ_DEFAULT_USER}
      RABBITMQ_DEFAULT_PASS: ${RABBITMQ_DEFAULT_PASS}
    volumes:
      - ${STORAGE_PATH}/onlyoffice/db/rabbitmq:/var/lib/rabbitmq

  onlyoffice:
    image: onlyoffice/documentserver:9.1.0
    restart: unless-stopped
    depends_on:
      onlyoffice-postgres:
        condition: service_healthy
      onlyoffice-redis:
        condition: service_healthy
      onlyoffice-rabbitmq:
        condition: service_healthy
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:8000/info/info.json" ]
      start_period: 60s
    volumes:
      - ${STORAGE_PATH}/onlyoffice/data:/var/www/onlyoffice/Data
      - ${STORAGE_PATH}/onlyoffice/cache:/var/lib/onlyoffice/documentserver/App_Data/cache/files
      - ${STORAGE_PATH}/onlyoffice/public:/var/www/onlyoffice/documentserver-example/public/files
      - ${STORAGE_PATH}/onlyoffice/fonts:/usr/share/fonts
    environment:
      DB_TYPE: postgres
      DB_HOST: onlyoffice-postgres
      DB_PORT: 5432
      DB_NAME: ${POSTGRES_DB}
      DB_USER: ${POSTGRES_USER}
      DB_PWD: ${POSTGRES_PASSWORD}
      AMQP_TYPE: rabbitmq
      AMQP_URI: amqp://${RABBITMQ_DEFAULT_USER}:${RABBITMQ_DEFAULT_PASS}@onlyoffice-rabbitmq
      REDIS_SERVER_HOST: onlyoffice-redis
      REDIS_SERVER_PORT: 6379
      REDIS_SERVER_PASS: ${REDIS_PASSWORD}
      JWT_ENABLED: true
      JWT_SECRET: ${ONLYOFFICE_JWT_KEY}
      JWT_HEADER: Authorization
      JWT_IN_BODY: 'true'
    labels:
      traefik.enable: true
      traefik.http.routers.onlyoffice.entrypoints: websecure
      traefik.http.routers.onlyoffice.rule: Host(`onlyoffice.$BASE_DOMAIN`)
      # homepage
      homepage.group: Others
      homepage.name: OnlyOffice(NextCloud)
      homepage.icon: onlyoffice.svg
      homepage.description: Personal office suite

networks:
  default:
    external: true
    name: proxy
