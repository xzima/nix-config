services:
  postgres:
    image: postgres:17.5-alpine3.22
    restart: unless-stopped
    healthcheck:
      test: [ "CMD", "pg_isready", "-q", "-d", "${POSTGRES_DB}", "-U", "${POSTGRES_USER}" ]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 60s
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - ${STORAGE_PATH}/nextcloud/db/postgres:/var/lib/postgresql/data

  redis:
    image: redis:8.0.2-alpine3.21
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 60s
    volumes:
      - ${STORAGE_PATH}/nextcloud/db/redis:/data

  nextcloud:
    build: ./full
    restart: unless-stopped
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:80/"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 90s
    volumes:
      - ${STORAGE_PATH}/nextcloud/main:/var/www/html
      - ${STORAGE_PATH}/nextcloud/data:/var/www/html/data
      - ${STORAGE_PATH}/nextcloud/config:/var/www/html/config #local configuration
      - ${STORAGE_PATH}/nextcloud/custom_apps:/var/www/html/custom_apps #installed / modified apps
      - ${STORAGE_PATH}/nextcloud/themes:/var/www/html/themes/ #theming/branding
    environment:
      TZ: ${TZ}
      REDIS_HOST: redis
      POSTGRES_HOST: postgres
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      NEXTCLOUD_ADMIN_USER: ${NEXTCLOUD_ADMIN_USER}
      NEXTCLOUD_ADMIN_PASSWORD: ${NEXTCLOUD_ADMIN_PASSWORD}
      NEXTCLOUD_TRUSTED_DOMAINS: nextcloud.$BASE_DOMAIN
      TRUSTED_PROXIES: 172.18.0.0/16 # docker proxy network
      OVERWRITEPROTOCOL: https
    labels:
      traefik.enable: true
      traefik.http.routers.nextcloud.entrypoints: websecure
      traefik.http.routers.nextcloud.rule: Host(`nextcloud.$BASE_DOMAIN`)
      traefik.http.routers.nextcloud.tls: true
      traefik.http.routers.nextcloud.middlewares: nextcloud-headers,nextcloud_redirect
      traefik.http.middlewares.nextcloud-headers.headers.stsSeconds: 31536000
      traefik.http.middlewares.nextcloud-headers.headers.stsPreload: true
      traefik.http.middlewares.nextcloud-headers.headers.forceSTSHeader: true
      traefik.http.middlewares.nextcloud-headers.headers.stsIncludeSubdomains: true
      traefik.http.middlewares.nextcloud_redirect.redirectregex.permanent: true
      traefik.http.middlewares.nextcloud_redirect.redirectregex.regex: https://(.*)/.well-known/(?:card|cal)dav
      traefik.http.middlewares.nextcloud_redirect.redirectregex.replacement: https://$${1}/remote.php/dav

networks:
  default:
    external: true
    name: proxy
